# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  node-cypress:
    docker:
      - image: "cypress/browsers:node16.14.0-chrome99-ff97"

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@5
  cypress: cypress-io/cypress@3.1.1

jobs:
  # Below is the definition of your job to test your Node app. You can rename and customize it as you want.
  test:
    # These next lines define a docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: cimg/node:19.9.0
    # Then run your tests!
    steps:
      # Checkout the code as the first step.
      - checkout
      # The orb install-packages step will also automatically cache them for faster future runs.
      - node/install-packages:
          pkg-manager: "yarn"
          override-ci-command: "yarn install"
      - run:
          name: Run tests
          command: |
            touch ./tests/unit/french.spec.ts
            echo "import { mount } from \"@vue/test-utils\";import CartItemCard from \"@/components/CartItemCard.vue\";describe(\"CartItemCard.vue\", () => {it(\"renders the menuItem prop data\", () => {const menuItem = {id: 1, name: \"French Fries\", description: \"Fried potato rectangles\", price: \"2.99\", imageId: \"1\",};const wrapper = mount(CartItemCard, {props: { menuItem },} as any);expect(wrapper.text()).toContain(\"French\");});});" > ./tests/unit/french.spec.ts
            cat ./tests/unit/french.spec.ts
            git bisect start
            git bisect bad 065cd263aca7c9573206d21366141fe56a3a1773
            git bisect good 3106a0587a16f7c62db7edf1501365abe1a774c3
            git bisect run yarn test:unit french.spec.ts
  
  run_cypress_tests:
    docker:
        - image: cimg/node:16.10
    steps:
      - checkout
      - run:
          name: Install deps
          command: yarn install
      - run:
          name: Install reporter
          command: yarn add cypress-circleci-reporter mocha --dev
      - run:
          name: Install cypress binary
          command: yarn cypress install
      - run:
          name: Run cypress tests
          command: circleci tests glob "./cypress/e2e/**/*.cy.js" | circleci tests run --command-"xargs yarn cypress run --reporter cypress-circleci-reporter"
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample:
    jobs:
     # - test
       - run_cypress_tests
